(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([[324],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>p,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),g=r,y=m["".concat(i,".").concat(g)]||m[g]||u[g]||o;return n?a.createElement(y,l(l({ref:t},p),{},{components:n})):a.createElement(y,l({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2373:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>o,metadata:()=>l,toc:()=>s,default:()=>c});var a=n(22122),r=(n(67294),n(3905));const o={title:"TSX"},l={unversionedId:"tsx",id:"tsx",isDocsHomePage:!1,title:"TSX",description:'As of version 0.42.0, TypeScriptToLua supports the use of TSX. To enable it, add "jsx": "react" to your tsconfig - other values are not supported. It is your job to make sure the required factory functions are available in the Lua environment.',source:"@site/docs/tsx.md",sourceDirName:".",slug:"/tsx",permalink:"/docs/tsx",editUrl:"https://github.com/TypeScriptToLua/TypeScriptToLua.github.io/edit/source/docs/tsx.md",version:"current",frontMatter:{title:"TSX"},sidebar:"docs",previous:{title:"Language extensions",permalink:"/docs/advanced/language-extensions"},next:{title:"Overview",permalink:"/docs/api/overview"}},s=[{value:"Custom factory functions",id:"custom-factory-functions",children:[{value:"jsxFactory tsconfig example",id:"jsxfactory-tsconfig-example",children:[]},{value:"@jsx annotation example",id:"jsx-annotation-example",children:[]}]},{value:"jsxFragmentFactory",id:"jsxfragmentfactory",children:[{value:"jsxFragmentFactory tsconfig example",id:"jsxfragmentfactory-tsconfig-example",children:[]},{value:"@jsxFrag annotation example",id:"jsxfrag-annotation-example",children:[]}]}],i={toc:s};function c({components:e,...t}){return(0,r.kt)("wrapper",(0,a.Z)({},i,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"As of version ",(0,r.kt)("inlineCode",{parentName:"p"},"0.42.0"),", TypeScriptToLua supports the use of TSX. To enable it, add ",(0,r.kt)("inlineCode",{parentName:"p"},'"jsx": "react"')," to your tsconfig - other values are not supported. It is your job to make sure the required factory functions are available in the Lua environment."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=tsconfig.json",title:"tsconfig.json"},'{\n    "compilerOptions": {\n        ...\n        "jsx": "react",\n        ...\n    },\n}\n')),(0,r.kt)("p",null,"TSX will be translated to lua as it would be translated to JS:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const element = <div a={b}>Inner text!</div>;\n")),(0,r.kt)("p",null,"Will become:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local element = React.createElement("div", {a = b}, "Inner text!");\n')),(0,r.kt)("h2",{id:"custom-factory-functions"},"Custom factory functions"),(0,r.kt)("p",null,"It is possible to supply custom factory functions using the ",(0,r.kt)("inlineCode",{parentName:"p"},"jsxFactory")," tsconfig setting or ",(0,r.kt)("inlineCode",{parentName:"p"},"/** @jsx */")," annotation."),(0,r.kt)("h3",{id:"jsxfactory-tsconfig-example"},"jsxFactory tsconfig example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=tsconfig.json",title:"tsconfig.json"},'{\n    "compilerOptions": {\n        ...\n        "jsx": "react",\n        "jsxFactory": "MyNamespace.MyCreate"\n        ...\n    },\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const element = <div a={b}>Inner text!</div>;\n")),(0,r.kt)("p",null,"Will translate to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local element = MyNamespace.MyCreate("div", {a = b}, "Inner text!");\n')),(0,r.kt)("h3",{id:"jsx-annotation-example"},"@jsx annotation example"),(0,r.kt)("p",null,"Note: the annotation MUST be at the top of the file!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"/** @jsx MyNamespace.MyCreate */\nconst element = <div a={b}>Inner text!</div>;\n")),(0,r.kt)("p",null,"Will translate to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local element = MyNamespace.MyCreate("div", {a = b}, "Inner text!");\n')),(0,r.kt)("h2",{id:"jsxfragmentfactory"},"jsxFragmentFactory"),(0,r.kt)("p",null,"You can also provide a customfragment using the ",(0,r.kt)("inlineCode",{parentName:"p"},"jsxFragmentFactory")," tsconfig setting or ",(0,r.kt)("inlineCode",{parentName:"p"},"/** @jsxFrag */")," annotation."),(0,r.kt)("h3",{id:"jsxfragmentfactory-tsconfig-example"},"jsxFragmentFactory tsconfig example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=tsconfig.json",title:"tsconfig.json"},'{\n    "compilerOptions": {\n        ...\n        "jsx": "react",\n        "jsxFactory": "MyNamespace.MyCreate",\n        "jsxFragmentFactory": "MyNamespace.MyFragment"\n        ...\n    },\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const element = <></>;\n")),(0,r.kt)("p",null,"Will translate to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local element = MyNamespace.MyCreate(MyNamespace.MyFragment, {});\n")),(0,r.kt)("h3",{id:"jsxfrag-annotation-example"},"@jsxFrag annotation example"),(0,r.kt)("p",null,"Note: the annotation MUST be at the top of the file!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"/** @jsx MyNamespace.MyCreate */\n/** @jsxFrag MyNamespace.MyCreate */\nconst element = <></>;\n")),(0,r.kt)("p",null,"Will translate to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local element = MyNamespace.MyCreate(MyNamespace.MyFragment, {});\n")))}c.isMDXComponent=!0}}]);